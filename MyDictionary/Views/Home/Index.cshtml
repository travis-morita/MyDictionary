@model MyDictionary.Web.ViewModels.ApiWordViewModel

@{
    ViewData["Title"] = "GetWord";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="text-center">
    <h1 class="display-4">My Dictionary</h1>
</div>
<partial name="/Views/Shared/_Search.cshtml">

    @if (Model != null && Model.ApiError != null)
    {
        <div class="col-md-12 alert-danger"><h4>@Model.ApiError</h4></div>
    }
    else if (Model != null && Model.NotFound)
    {
        <div class="col-md-12">
            <h3>Word not found</h3>
            Suggestions: @Model.Suggestions;
        </div>
    }
    else if (Model != null)
    {

    <div class="col-md-12">
        <form asp-controller="MyWords" asp-action="@(Model.IsSaved ? "Delete" : "Add")">
            <input hidden asp-for="@Model.ApiWordMeta.First().WordDisplay" name="Word" />
            <h3>
                @Model.ApiWordMeta.First().WordDisplay @*<span class="font-italic " style="font-size: .6em">@Model.ApiWordMeta.First().PartOfSpeech</span>*@
            </h3>

            @if (Model.IsSaved)
            {
                <button id="inputSubmit" type="submit">
                    <i class="fa fa-bookmark" aria-hidden="true"></i>
                </button>
            }
            else
            {
                <button id="inputSubmit" type="submit">
                    <i class="fa fa-bookmark-o" aria-hidden="true"></i>
                </button>
            }
        </form>

    </div>
    @Html.DisplayFor(m => m.ApiWordMeta);

    }


    @section Scripts {
        <script type="text/javascript">
            $(function () {
                $("#word").autocomplete({

                    source: function (request, response) {
                        $.ajax({
                            async: true,
                            crossDomain: true,
                            url: "https://api.datamuse.com/words?sp=" + request.term + "*",
                            method: 'get',
                            success: function (obj) {
                                var words = [];
                                obj.forEach(w => {
                                    words.push(w.word);
                                });
                                response(words);
                                //var obj = JSON.parse(data);
                                //response(obj.results.data);
                            }
                        });
                    },
                    minLength: 3,
                    error: function (message) {
                        alert(message);
                    },
                    autoFocus: true
                });
            });

        </script>
    }
